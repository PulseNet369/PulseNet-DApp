{"ast":null,"code":"import React,{useEffect,useState}from'react';import{ethers}from'ethers';import{provider,formatAddress,DEAD_ADDRESSES}from'../utils/web3';import tokens from'../config/tokens';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TokenCard=_ref=>{let{tokenKey}=_ref;const[tokenData,setTokenData]=useState({totalSupply:'0',burnedSupply:'0',name:'',symbol:''});const tokenConfig=tokens[tokenKey];useEffect(()=>{const fetchTokenData=async()=>{const tokenContract=new ethers.Contract(tokenConfig.token.address,tokenConfig.token.abi,provider);try{const[name,symbol,totalSupply]=await Promise.all([tokenContract.name(),tokenContract.symbol(),tokenContract.totalSupply()]);// Calculate burned supply\nconst burnedBalances=await Promise.all(DEAD_ADDRESSES.map(address=>tokenContract.balanceOf(address)));const burnedSupply=burnedBalances.reduce((acc,curr)=>acc+BigInt(curr),BigInt(0));setTokenData({name,symbol,totalSupply:ethers.formatEther(totalSupply),burnedSupply:ethers.formatEther(burnedSupply)});}catch(error){console.error('Error fetching token data:',error);}};fetchTokenData();},[tokenKey,tokenConfig]);return/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card-header\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"card-title\",children:tokenData.name}),/*#__PURE__*/_jsx(\"span\",{className:\"badge\",children:tokenData.symbol})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Contract Address\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info-value\",children:formatAddress(tokenConfig.token.address)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Total Supply\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-value\",children:[Number(tokenData.totalSupply).toLocaleString(),\" \",tokenData.symbol]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Burned Supply\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"info-value\",children:[Number(tokenData.burnedSupply).toLocaleString(),\" \",tokenData.symbol]})]}),tokenConfig.hasWrapper&&'wrappedToken'in tokenConfig&&/*#__PURE__*/_jsxs(\"div\",{className:\"info-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"info-label\",children:\"Wrapped Token Address\"}),/*#__PURE__*/_jsx(\"div\",{className:\"info-value\",children:formatAddress(tokenConfig.wrappedToken.address||'')})]})]});};export default TokenCard;","map":{"version":3,"names":["React","useEffect","useState","ethers","provider","formatAddress","DEAD_ADDRESSES","tokens","jsx","_jsx","jsxs","_jsxs","TokenCard","_ref","tokenKey","tokenData","setTokenData","totalSupply","burnedSupply","name","symbol","tokenConfig","fetchTokenData","tokenContract","Contract","token","address","abi","Promise","all","burnedBalances","map","balanceOf","reduce","acc","curr","BigInt","formatEther","error","console","className","children","Number","toLocaleString","hasWrapper","wrappedToken"],"sources":["/workspaces/PulseNet-dApp/src/components/TokenCard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport { provider, formatAddress, DEAD_ADDRESSES } from '../utils/web3';\nimport tokens from '../config/tokens';\n\ninterface TokenInfo {\n    name: string;\n    symbol: string;\n    totalSupply: string;\n    burnedSupply: string;\n}\n\ninterface TokenCardProps {\n    tokenKey: string;\n}\n\nconst TokenCard: React.FC<TokenCardProps> = ({ tokenKey }) => {\n    const [tokenData, setTokenData] = useState<TokenInfo>({\n        totalSupply: '0',\n        burnedSupply: '0',\n        name: '',\n        symbol: '',\n    });\n\n    const tokenConfig = tokens[tokenKey as keyof typeof tokens];\n\n    useEffect(() => {\n        const fetchTokenData = async () => {\n            const tokenContract = new ethers.Contract(\n                tokenConfig.token.address,\n                tokenConfig.token.abi,\n                provider\n            );\n\n            try {\n                const [name, symbol, totalSupply] = await Promise.all([\n                    tokenContract.name(),\n                    tokenContract.symbol(),\n                    tokenContract.totalSupply(),\n                ]);\n\n                // Calculate burned supply\n                const burnedBalances = await Promise.all(\n                    DEAD_ADDRESSES.map(address => \n                        tokenContract.balanceOf(address)\n                    )\n                );\n\n                const burnedSupply = burnedBalances.reduce(\n                    (acc, curr) => acc + BigInt(curr),\n                    BigInt(0)\n                );\n\n                setTokenData({\n                    name,\n                    symbol,\n                    totalSupply: ethers.formatEther(totalSupply),\n                    burnedSupply: ethers.formatEther(burnedSupply),\n                });\n            } catch (error) {\n                console.error('Error fetching token data:', error);\n            }\n        };\n\n        fetchTokenData();\n    }, [tokenKey, tokenConfig]);\n\n    return (\n        <div className=\"card\">\n            <div className=\"card-header\">\n                <h2 className=\"card-title\">{tokenData.name}</h2>\n                <span className=\"badge\">{tokenData.symbol}</span>\n            </div>\n\n            <div className=\"info-row\">\n                <div className=\"info-label\">Contract Address</div>\n                <div className=\"info-value\">\n                    {formatAddress(tokenConfig.token.address)}\n                </div>\n            </div>\n\n            <div className=\"info-row\">\n                <div className=\"info-label\">Total Supply</div>\n                <div className=\"info-value\">\n                    {Number(tokenData.totalSupply).toLocaleString()} {tokenData.symbol}\n                </div>\n            </div>\n\n            <div className=\"info-row\">\n                <div className=\"info-label\">Burned Supply</div>\n                <div className=\"info-value\">\n                    {Number(tokenData.burnedSupply).toLocaleString()} {tokenData.symbol}\n                </div>\n            </div>\n\n            {tokenConfig.hasWrapper && 'wrappedToken' in tokenConfig && (\n                <div className=\"info-row\">\n                    <div className=\"info-label\">Wrapped Token Address</div>\n                    <div className=\"info-value\">\n                        {formatAddress((tokenConfig as any).wrappedToken.address || '')}\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default TokenCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}